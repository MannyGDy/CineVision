server:
  port: ${SERVER_PORT:8080}   # default to 8080 if env not set

## Eureka Properties
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL:http://localhost:8761/eureka}
    fetch-registry: true
    register-with-eureka: true

## Apache Kafka Consumer Properties
spring:
  kafka:
    consumer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
      group-id: ${KAFKA_GROUP_ID:email}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: "*"
            type:
              mapping: event:${KAFKA_MESSAGE_TYPE:com.kaankaplan.emailService.dto.EmailMessageKafkaDto}
    topic:
      name: ${KAFKA_TOPIC_NAME:email_topics}

  # Zipkin Properties
  zipkin:
    base-url: ${ZIPKIN_URL:http://localhost:9411}

  # Sleuth Properties
  sleuth:
    sampler:
      probability: ${SLEUTH_SAMPLER_PROBABILITY:1.0}

  # Mail Properties
  mail:
    default-encoding: UTF-8
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:python3.testmail@gmail.com}
    password: ${MAIL_PASSWORD:password}    # always inject real password via env
    protocol: ${MAIL_PROTOCOL:smtp}
    test-connection: false
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

application:
  name: emailService
