server:
  port: ${SERVER_PORT:0}   # random port unless overridden

spring:
  application:
    name: ${SPRING_APPLICATION_NAME:movieService}

  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:postgres}:${POSTGRES_PORT:5432}/${POSTGRES_DB:cine_vision}
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:12345}
    driver-class-name: org.postgresql.Driver

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: ${HIBERNATE_FORMAT_SQL:true}
    hibernate:
      ddl-auto: ${HIBERNATE_DDL_AUTO:update}
    show-sql: ${HIBERNATE_SHOW_SQL:true}

  kafka:
    producer:
      bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring:
          json:
            type:
              mapping: event:com.kaankaplan.movieService.entity.dto.EmailMessageKafkaDto
    topic:
      name: ${KAFKA_TOPIC:email_topics}

  zipkin:
    base-url: ${ZIPKIN_BASE_URL:http://zipkin:9411}

  sleuth:
    sampler:
      probability: ${SLEUTH_SAMPLER_PROBABILITY:1.0}

eureka:
  client:
    service-url:
      defaultZone: http://${EUREKA_USERNAME}:${EUREKA_PASSWORD}@eureka-server:8761/eureka
    fetch-registry: ${EUREKA_FETCH_REGISTRY:true}
    register-with-eureka: ${EUREKA_REGISTER_WITH_EUREKA:true}

management:
  health:
    circuitbreakers:
      enabled: ${CIRCUIT_BREAKERS_ENABLED:true}
  endpoints:
    web:
      exposure:
        include: ${ACTUATOR_EXPOSED_ENDPOINTS:*}
  endpoint:
    health:
      show-details: ${ACTUATOR_HEALTH_SHOW_DETAILS:always}
  server:
    port: ${MANAGEMENT_SERVER_PORT:8000}

resilience4j:
  circuitbreaker:
    instances:
      inventory:
        register-health-indicator: ${RESILIENCE_REGISTER_HEALTH:true}
        event-consumer-buffer-size: ${RESILIENCE_BUFFER_SIZE:10}
        sliding-window-type: ${RESILIENCE_WINDOW_TYPE:COUNT_BASED}
        sliding-window-size: ${RESILIENCE_WINDOW_SIZE:5}
        failure-rate-threshold: ${RESILIENCE_FAILURE_THRESHOLD:50}
        wait-duration-in-open-state: ${RESILIENCE_OPEN_WAIT:5s}
        permitted-number-of-calls-in-half-open-state: ${RESILIENCE_HALF_OPEN_CALLS:3}
        automatic-transition-from-open-to-half-open-enabled: ${RESILIENCE_AUTO_TRANSITION:true}
  retry:
    instances:
      inventory:
        max-attempts: ${RESILIENCE_RETRY_ATTEMPTS:3}
        wait-duration: ${RESILIENCE_RETRY_WAIT:5s}
